{"version":3,"sources":["components/gameData.js","components/Card.js","components/Container.js","components/Nav.js","App.js","index.js"],"names":["gameData","card","count","Card","playRound","className","onClick","key","id","src","alt","Container","cards","map","item","Nav","score","maxScore","App","useState","setScore","setMaxScore","JSON","parse","stringify","setCards","useEffect","evt","array","i","length","j","Math","floor","random","shuffle","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4833d147.chunk.js","sourcesContent":["export const gameData = [\n    { card: \"arcanine\", count: 0 },\n    { card: \"bulbasaur\", count: 0 },\n    { card: \"charmander\", count: 0 },\n    { card: \"ditto\", count: 0 },\n    { card: \"dragonite\", count: 0 },\n    { card: \"eevee\", count: 0 },\n    { card: \"gengar\", count: 0 },\n    { card: \"gyarados\", count: 0 },\n    { card: \"jigglypuff\", count: 0 },\n    { card: \"kadabra\", count: 0 },\n    { card: \"lapras\", count: 0 },\n    { card: \"machamp\", count: 0 },\n    { card: \"marowak\", count: 0 },\n    { card: \"meowth\", count: 0 },\n    { card: \"mew\", count: 0 },\n    { card: \"ninetales\", count: 0 },\n    { card: \"onix\", count: 0 },\n    { card: \"pidgeotto\", count: 0 },\n    { card: \"pikachu\", count: 0 },\n    { card: \"poliwrath\", count: 0 },\n    { card: \"ponyta\", count: 0 },\n    { card: \"scyther\", count: 0 },\n    { card: \"snorlax\", count: 0 },\n    { card: \"squirtle\", count: 0 },\n  ];\n  ","import React from \"react\";\n\nfunction Card({ card, playRound }) {\n  return (\n    <div className=\"card-div\">\n      <img\n        onClick={playRound}\n        key={card}\n        id={card}\n        src={`./img/${card}.png`}\n        alt={card}\n        className=\"card-image\"\n      />\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nfunction Container({cards, playRound}) {\n  \n  return (\n      <div className=\"card-container\">\n        {cards.map((item) => (\n            <Card playRound={playRound} key={item.card} card={item.card}/>\n        ))}\n      </div>\n  );\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Nav({ score, maxScore }) {\n  return (\n    <nav className=\"nav\">\n      <h1 className=\"header\">Memory Game!</h1>\n      <h2 className=\"scoreboard\">\n        Current score: {score} Max Score: {maxScore}\n      </h2>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { gameData } from \"./components/gameData\";\nimport Container from \"./components/Container\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [maxScore, setMaxScore] = useState(0);\n\n  const [cards, setCards] = useState(JSON.parse(JSON.stringify(gameData)));\n\n  const shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n\n  const playRound = (evt) => {\n    const card = [...cards];\n    shuffle(card);\n    for (let i = 0; i < card.length; i++) {\n      if (card[i].card === evt.target.id && card[i].count === 0) {\n        card[i].count = card[i].count + 1;\n        setScore(score + 1);\n        setCards(card);\n      } else if (card[i].card === evt.target.id && card[i].count === 1) {\n        setCards(JSON.parse(JSON.stringify(gameData)));\n        setScore(0);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (score > maxScore) {\n      setMaxScore(score);\n    }\n  }, [score, maxScore]);\n\n  return (\n    <div className=\"App\">\n      <Nav score={score} maxScore={maxScore} />\n      <Container cards={cards} playRound={playRound} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}